@model StudentProfile
@{
    ViewData["Title"] = "Upload";
}

<link rel="stylesheet" href="~/dropzone/min/basic.min.css" />
<link rel="stylesheet" href="~/dropzone/min/dropzone.min.css" />

<style>

    .dropzone {
        border: 2px dashed #dedede;
        border-radius: 5px;
        background: #f5f5f5;
    }


        .dropzone .dz-message {
            color: rgba(0,0,0,.54);
            font-weight: 500;
            font-size: initial;
            text-transform: uppercase;
        }

    -webkit-scrollbar {
        height: 10px;
    }

    table.dataTable.table-striped.DTFC_Cloned tbody tr:nth-of-type(odd) {
        background-color: #F3F3F3;
    }

    table.dataTable.table-striped.DTFC_Cloned tbody tr:nth-of-type(even) {
        background-color: white;
    }
</style>
<form method="post" class="dropzone" id="dropzoneForm" asp-controller="StudentProfile" asp-action="UploadLogo" enctype="multipart/form-data">

    <div class="row">
        <div class="col-md-4">
        </div>
        <div class="col-md-4 d-flex justify-content-center">
            <button class="btn btn-primary" id="btnUploadAll" type="button"> <i class="fa fa-upload"></i> Upload File(s)</button>&nbsp;&nbsp;
            <a asp-controller="StudentProfile" asp-action="Index" class="btn btn-dark" > Back to StudentProfile</a>
        </div>
    </div>


    <div class="dz-message needsclick">
        <input type="hidden" asp-for="StudentID" />
        <input type="hidden" asp-for="FileStamp" />
        
        Drop files here or click to upload.<br>

    </div>
    <div class="fallback">
        <input type="file" name="files" multiple />
    </div>


</form>

<!-- localization elements -->
<div class="modal" aria-hidden="true">
    <span id="dictDefaultMessage">Drop files here or click to upload.</span>
    <span id="dictFallbackMessage">Your browser does not support drag'n'drop file uploads</span>
    <span id="dictFallbackText">Please use the fallback form below to upload your files like in the olden days</span>
    <span id="dictFileTooBig">File is too big ({{filesize}}MiB). Max filesize: {{maxFilesize}}MiB.</span>
    <span id="dictInvalidFileType">You can't upload files of this type.</span>
    <span id="dictResponseError">Server responded with {{statusCode}} code.</span>
    <span id="dictCancelUpload">Cancel upload</span>
    <span id="dictCancelUploadConfirmation">Are you sure you want to cancel this upload?</span>
    <span id="dictUploadCanceled">Upload cenceled.</span>
    <span id="dictRemoveFile">Delete</span>
    <span id="dictRemoveFileConfirmation">Are you sure you want to delete this file?</span>
    <span id="dictMaxFilesExceeded">You can not upload any more files.</span>
    <span id="dictFileSizeUnits_TB">TB</span>
    <span id="dictFileSizeUnits_GB">GB</span>
    <span id="dictFileSizeUnits_MB">MB</span>
    <span id="dictFileSizeUnits_KB">KB</span>
    <span id="dictFileSizeUnits_b">b</span>
</div>



@section Scripts{

    <script src="~/lib/bootstrap-sweetalert/sweetalert.min.js"></script>
    <script src="~/dropzone/min/dropzone.min.js"></script>
    <script src="~/js/bootbox.min.js"></script>

    <script src="~/js/bootbox.locales.min.js"></script>
    <script>


        $("#btnUploadAll").hide();
        Dropzone.options.dropzoneForm = {
            addRemoveLinks: true,
            paramName: "files", //default param name is "file", make it "files" so it matches parameter name in the method
            resizeWidth: 800,
            parallelUploads: 30,
            resizeHeight: 1000,
            resizeMethod: 'contain',
            resizeQuality: 1,
            timeout: 180000,
            autoProcessQueue: false,
            acceptedFiles: 'image/*,application/pdf,.docx,.xlsx',
            maxFilesize: 10,
            thumbnail: function (file, dataUrl) {
                if (file.previewElement) {

                    file.previewElement.classList.remove("dz-file-preview");
                    var images = file.previewElement.querySelectorAll("[data-dz-thumbnail]");
                    for (var i = 0; i < images.length; i++) {
                        var thumbnailElement = images[i];
                        thumbnailElement.alt = file.name;
                        thumbnailElement.src = dataUrl;
                    }
                    setTimeout(function () { file.previewElement.classList.add("dz-image-preview"); }, 1);
                }
            },
            init: function () {

                var submitButton = document.querySelector("#btnUploadAll")
                myDropzone = this; // closure
                submitButton.addEventListener("click", function () {
                    myDropzone.processQueue(); // Tell Dropzone to process all queued files.

                });

                this.on("addedfile", function () {
                    $("#btnUploadAll").show();
                });

                myDropzone.on("addedfile", function (file) {
                    $("#btnUploadAll").show();
                    var downloadBtn = Dropzone.createElement("<a class='dz-download' style='visibility:hidden' href='#downloadModal' data-file-name='" + file.name + "' data-toggle='modal' data-file-size='" + file.size + "' data-img-url='" + file.filePath + "'><i class='fas fa-download text-success'></i></a>");

                    file.previewElement.appendChild(downloadBtn);

                    file.previewElement.addEventListener("click", function () {
                        downloadBtn.click();
                    });
                });


            },
            success: function (file, msg) {
                if (msg.count != "0") {
                    location.reload();
                    bootbox.alert({
                        size: 'small',
                        title: "File Uploader",
                        message: msg.count,
                        show: true,
                        backdrop: true
                    });
                } else {
                    bootbox.alert({
                        size: 'small',
                        title: "File Uploader",
                        message: JSON.stringify(msg),
                        show: true,
                        backdrop: true
                    });
                }

                $("#btnUploadAll").hide();
            },
            removedfile: function removedfile(file) {
                if (file.previewElement != null && file.previewElement.parentNode != null) {
                    file.previewElement.parentNode.removeChild(file.previewElement);
                }
            }

        };


        // get elements for localization
        with (Dropzone.prototype.defaultOptions) {
            dictDefaultMessage = document.getElementById("dictDefaultMessage").innerText;
            dictFallbackMessage = document.getElementById("dictFallbackMessage").innerText;
            dictFallbackText = document.getElementById("dictFallbackText").innerText;
            dictFileTooBig = document.getElementById("dictFileTooBig").innerText;
            dictInvalidFileType = document.getElementById("dictInvalidFileType").innerText;
            dictResponseError = document.getElementById("dictResponseError").innerText;
            dictCancelUpload = document.getElementById("dictCancelUpload").innerText;
            dictCancelUploadConfirmation = document.getElementById("dictCancelUploadConfirmation").innerText;
            dictUploadCanceled = document.getElementById("dictUploadCanceled").innerText;
            dictRemoveFile = document.getElementById("dictRemoveFile").innerText;
            dictRemoveFileConfirmation = document.getElementById("dictRemoveFileConfirmation").innerText; // if this is null, the user will not be prompted when deleting file.
            dictMaxFilesExceeded = document.getElementById("dictMaxFilesExceeded").innerText;
            dictFileSizeUnits = {
                tb: document.getElementById("dictFileSizeUnits_TB").innerText,
                gb: document.getElementById("dictFileSizeUnits_GB").innerText,
                mb: document.getElementById("dictFileSizeUnits_MB").innerText,
                kb: document.getElementById("dictFileSizeUnits_KB").innerText,
                b: document.getElementById("dictFileSizeUnits_b").innerText
            };
        };
    </script>
}